{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/main.js","js/router.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","authenticate","provider","res","console","log","MainController","$rootScope","logout","secureState","e","toState","main","message","isAuthenticated","protectedState","includes","name","preventDefault","isLoggedIn","$on","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","User","$resource","id","update","method","UsersIndexController","usersIndex","all","query","UsersNewController","create","save","usersNew","UsersShowController","deleteUser","usersShow","$remove","get","params","delete","UsersEditController","usersEdit","$update","angular","module","constant","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n.controller('RegisterController', RegisterController)\n.controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n    .then(() => {\n      $state.go('login');\n    });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then((res) => {\n      console.log(res);\n    });\n  }\n\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('finalProject')\n.controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  const protectedState = ['userEdit'];\n\n  function secureState(e, toState) {\n    // console.log(toState);\n    main.message = null;\n    if(!$auth.isAuthenticated() && protectedState.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You must be logged in to go there!';\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('finalProject')\n.config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n  .state('usersIndex', {\n    url: '/users',\n    templateUrl: '/templates/usersIndex.html',\n    controller: 'UsersIndexController as usersIndex'\n  })\n  .state('usersShow', {\n    url: '/users/:id',\n    templateUrl: '/templates/usersShow.html',\n    controller: 'UsersShowController as show'\n  })\n  .state('usersEdit', {\n    url: '/users/:id/edit',\n    templateUrl: '/templates/usersEdit.html',\n    controller: 'UsersEditController as usersEdit'\n  })\n  .state('register', {\n    url: '/register',\n    templateUrl: '/templates/register.html',\n    controller: 'RegisterController as register'\n  })\n  .state('login', {\n    url: '/login',\n    templateUrl: '/templates/login.html',\n    controller: 'LoginController as login'\n  });\n\n  $urlRouterProvider.otherwise('/users');\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n.controller('UsersIndexController', UsersIndexController)\n.controller('UsersNewController', UsersNewController)\n.controller('UsersShowController', UsersShowController)\n.controller('UsersEditController', UsersEditController);\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n\nUsersNewController.$inject = ['User', '$state'];\nfunction UsersNewController(User, $state) {\n  const usersNew = this;\n\n  usersNew.user = {};\n\n  function create() {\n    User.save(usersNew.user, () => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersNew.create = create;\n}\n\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state , $auth) {\n  const usersShow = this;\n\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    // console.log('I\\'m trying to delete a user...');\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersShow.delete = deleteUser;\n  usersShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n"]}